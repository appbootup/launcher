version: '3.5'

services:
  registry:
    container_name: mitra-registry
    image: ${CONTAINER_REGISTRY}/${CONTAINER_REPOSITORY}/registry:${REGISTRY_TAG:-latest}
    ports:
      - 5000:5000
    networks:
      - core
    restart: always

  zookeeper:
    container_name: mitra-zookeeper
    image: ${CONTAINER_REGISTRY}/${CONTAINER_REPOSITORY}/zookeeper:${ZOOKEEPER_TAG:-latest}
    depends_on:
      - registry
    ports:
      - "2181:2181"
    env_file:
      - ./conf/zk.env
    networks:
      - core
    restart: always

  broker:
    container_name: mitra-broker
    image: ${CONTAINER_REGISTRY}/${CONTAINER_REPOSITORY}/kafka:${KAFKA_TAG:-latest}
    depends_on:
      - registry
      - zookeeper
    ports:
      - "29093:29093"
    env_file:
      - ./conf/kafka.env
    networks:
      - core
    restart: always

  init:
    container_name: mitra-init
    image: confluentinc/cp-kafka:7.2.2
    depends_on:
      - broker
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      /etc/scripts/init.sh
      "
    env_file:
      - ./conf/init.env
    networks:
      - core
    volumes:
      - ./scripts:/etc/scripts

  payload:
    container_name: mitra-payload-${MACHINE_ID:-M001}
    image: ${CONTAINER_REGISTRY}/${CONTAINER_REPOSITORY}/payload:${PAYLOAD_TAG:-latest}
    depends_on:
      - init
    env_file:
      - ./conf/common.env
      - ./conf/payload.env
      - ./conf/sasl-auth.env
    healthcheck:
      test: wget --no-verbose --tries=1 http://localhost:8080/health || exit 1
      interval: 2s
      timeout: 1s
      retries: 3
      start_period: 10s
    networks:
      - core

  limits:
    container_name: mitra-limits-${MACHINE_ID:-M001}
    image: ${CONTAINER_REGISTRY}/${CONTAINER_REPOSITORY}/limits:${LIMITS_TAG:-latest}
    depends_on:
      - init
    env_file:
      - ./conf/common.env    
      - ./conf/limits.env
      - ./conf/sasl-auth.env
    healthcheck:
      test: wget --no-verbose --tries=1 http://localhost:8080/health || exit 1
      interval: 2s
      timeout: 1s
      retries: 3
      start_period: 10s
    networks:
      - core

  alarms:
    container_name: mitra-alarms-${MACHINE_ID:-M001}
    image: ${CONTAINER_REGISTRY}/${CONTAINER_REPOSITORY}/alarms:${ALARMS_TAG:-latest}
    depends_on:
      - init
    env_file:
      - ./conf/common.env    
      - ./conf/alarms.env
    healthcheck:
      test: wget --no-verbose --tries=1 http://localhost:8080/q/health || exit 1
      interval: 2s
      timeout: 1s
      retries: 3
      start_period: 10s      
    networks:
      - core

  alerts:
    container_name: mitra-alerts-${MACHINE_ID:-M001}
    image: ${CONTAINER_REGISTRY}/${CONTAINER_REPOSITORY}/alerts:${ALERTS_TAG:-latest}
    depends_on:
      - init
    env_file:
      - ./conf/common.env    
      - ./conf/alerts.env
    healthcheck:
      test: wget --no-verbose --tries=1 http://localhost:8080/q/health || exit 1
      interval: 2s
      timeout: 1s
      retries: 3
      start_period: 10s      
    networks:
      - core

  merger:
    container_name: mitra-merger-${MACHINE_ID:-M001}
    image: ${CONTAINER_REGISTRY}/${CONTAINER_REPOSITORY}/merger:${MERGER_TAG:-latest}
    depends_on:
      - init
    env_file:
      - ./conf/common.env    
      - ./conf/merger.env
    healthcheck:
      test: wget --no-verbose --tries=1 http://localhost:8080/q/health || exit 1
      interval: 2s
      timeout: 1s
      retries: 3
      start_period: 10s      
    networks:
      - core

  streamer:
    container_name: mitra-streamer-${MACHINE_ID:-M001}
    image: ${CONTAINER_REGISTRY}/${CONTAINER_REPOSITORY}/streamer:${STREAMER_TAG:-latest}
    depends_on:
      - init
    env_file:
      - ./conf/common.env    
      - ./conf/streamer.env
    healthcheck:
      test: wget --no-verbose --tries=1 http://localhost:8080/q/health || exit 1
      interval: 2s
      timeout: 1s
      retries: 3
      start_period: 10s      
    ports:
      - ${EVENTS_PORT}:${EVENTS_PORT}
    networks:
      - core

  dashboard:
    container_name: mitra-dashboard-${MACHINE_ID:-M001}
    image: ${CONTAINER_REGISTRY}/${CONTAINER_REPOSITORY}/dashboard:${DASHBOARD_TAG:-latest}
    env_file:
      - ./conf/common.env    
      - ./conf/dashboard.env
    ports:
      - ${UI_PORT}:${UI_PORT}
    networks:
      - core    

networks:
  core:
    name: core
